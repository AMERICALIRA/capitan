<% content_for :scripts do %>
  <script>
    
    var player;
    var delay;
    var editor;
    var converter;
    var numberAttempts = 0;
    
    $(document).ready(function() {
      <% if @page.page_type == 'editor' %>
        
        converter = new Markdown.Converter();
        Markdown.Extra.init(converter);
        var instructions = $(".instructions");
        instructions.html(converter.makeHtml(instructions.html()));
        
        if (document.getElementById("code") !== null) {
          editor = CodeMirror.fromTextArea(document.getElementById("code"), {
            lineNumbers: true,
            lineWrapping: true,
            scrollbarStyle: "simple",
            extraKeys: {
              "Ctrl-Q": function(cm) { 
                cm.foldCode(cm.getCursor()); 
              },
              "F11": function(cm) {
                cm.setOption("fullScreen", !cm.getOption("fullScreen"));
              },
              "Esc": function(cm) {
                if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
              }                    
            },
            foldGutter: true,
            gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"]
          });
          
          editor.on("change", function() {
            clearTimeout(delay);
            delay = setTimeout(updatePreview, 300);
          });
          
          setTimeout(updatePreview, 300);
        }
        
        $(".start-over").click(function(e) {
          e.preventDefault();
          editor.setValue($("#initial_state").val());
        });
        
        $(".save").click(function(e) {
          e.preventDefault();
          
          var autoCorrector = <%= @page.auto_corrector %>;
          
          if (autoCorrector) {
            if (isValidCode(editor.getValue())) {
              saveAnswer(true);
            } else {
              numberAttempts = numberAttempts + 1;
              if (numberAttempts < 3) {
                swal({
                  title: "¡Ups! Parece que debes revisar tu código.",
                  text: "Inténtalo de nuevo y revisa que estés colocando el texto exacto, incluyendo los signos de puntuación",
                  type: "error",
                  confirmButtonText: "OK",
                });
              } else {
                swal({
                  title: "¿Problemas?",
                  text: "Hemos notado que te estás quedando atascada con este ejercicio, mejor continua con los demás y de ahi regresas por este.",
                  type: "warning",
                  showCancelButton: true,   
                  confirmButtonColor: "#5CB85C",   
                  closeOnConfirm: false,
                  confirmButtonText: "Siguiente lección",
                  cancelButtonText: "Seguir intentándolo",
                  closeOnConfirm: false,
                  showLoaderOnConfirm: true
                },function() {
                  <% if @next_page != nil %>
                    window.location = '<%= mycourse_unit_page_url(@course,@next_unit,@next_page) %>';
                  <% else %>
                    alert("Aún no hay una siguiente página a la que saltar!");
                  <% end %>
                });
              }
            }
          }  else {
            saveAnswer(false);
          }
        });
        
        $(".check-video-again").click(function(e) {
          e.preventDefault();
          swal({
            title: "Repasemos la lección",
            text: '<iframe id="videotip" width="100%" height="315" src="http://www.youtube.com/embed/'+'<%= @page.videotip %>'+'?enablejsapi=1" frameborder="0" allowfullscreen></iframe>',
            html: true
          },function() {
            $("#videotip").remove();
          });
        });
        
      <% end %>
      
      <% if @page.page_type == 'questions' %>

        $(".next-step").click(function(e) {
          e.preventDefault();
          
          if ($('input[name=question-option]:checked').val() != null) {
            $.post("/saveQuestion",{
              option_id: $('input[name=question-option]:checked').val(),
              page_id: <%= @page.id %>,
              question_group_id: $('input[name=question-option]:checked').attr("data-question-id"),
              sequence: parseInt($("#sequence").text())
            }, function(result) {
              if (result.status == "ok") {
                if (result.sequence != "MAX") {
                  $("#sequence").text(result.sequence);
                  $(".question").hide();
                  $("div[data-question-id="+result.questionGroupId+"]").show();
                } else {
                  $(".question-span").hide();
                  $(".question-finished").show();
                }
              } else {
                alert("Hubo un error al intentar grabar la respuesta, por favor vuelta a intentarlo");
              }
            });          
          } else {
            alert("Por favor seleccione una respuesta");
          }
        });
        
        $(".next-step-finished").click(function(e) {
          e.preventDefault();
          window.location = '<%= mycourse_unit_page_url(@course,@next_unit,@next_page) %>';
        });        
        
      <% end %>
      <% if @page.page_type == 'exercise' %>
        converter = new Markdown.Converter();
        var excercise_instructions = $(".exercise_instructions");
        excercise_instructions.html(converter.makeHtml(excercise_instructions.html()));
      <% end %>
    });
    
    <% if @page.page_type == 'editor' %>
    
      function saveAnswer(autoCorrector) {
        swal({
          title: autoCorrector ? "<%= @page.success_message.split("|")[0] %>" : "Grabar respuesta",   
          text: autoCorrector ? "<%= @page.success_message.split("|")[1]%>" : "Este tipo de pregunta no tiene evaluación automática, la pregunta se guardará para una posterior evaluación",   
          type: autoCorrector ? "success" : "info",
          confirmButtonText: "Grabar mi respuesta",   
          closeOnConfirm: false,
          showLoaderOnConfirm: true,
          html: true
        },function() {
          $.post("/saveAnswer",{
            answer: editor.getValue(),
            page_id: <%= @page.id %>,
            user_id: <%= current_user.id %>
          },function(result) {
            if (result.status == "ok") {
              swal({
                title: "Tu código se grabó con éxito",
                text: "Da click en continuar para seguir con las siguientes actividades",
                confirmButtonText: "Continuar",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
              },function() {
                <% if @next_page != nil %>
                  window.location = '<%= mycourse_unit_page_url(@course,@next_page.unit,@next_page) %>';
                <% else %>
                  alert("Aún no hay una siguiente página a la que saltar!");
                <% end %>
              });
            } else {
              swal({
                title: "¡Hubo un error al intentar grabar la respuesta!",
                text: "Por favor vuelta a intentarlo.",
                type: "error",
                confirmButtonText: "OK",
                closeOnConfirm: true
              });
            }
          });
        });      
      }
      
      
      function isValidCode(code) {
        var cleanCode = code.replace(/\>\s+\</g,'><').replace(/ /g,'').replace(/;/g,'').replace(/\r\n|\n/g,'').replace(/\t+/g, '');
        var solution = $("#solution").val().replace(/\>\s+\</g,'><').replace(/ /g,'').replace(/;/g,'').replace(/\r\n|\n/g,'').replace(/\t+/g, '');
        var matcher = new RegExp(solution,"g");
        return matcher.test(cleanCode);
      }
      
      function updatePreview() {
        var previewFrame = document.getElementById('preview');
        var preview =  previewFrame.contentDocument ||  previewFrame.contentWindow.document;
        preview.open();
        preview.write(editor.getValue());
        preview.close();
      }
      
    <% end %>
    
    <% if @page.page_type == 'video' %>
    
        $(".rewind-video").click(function(e) {
            e.preventDefault();
            $(".video-overlay").hide();
            player.seekTo(0,true);
        });    
    
      if (typeof youtube_api_init == 'undefined') {
        var tag = document.createElement('script');
        tag.src = "http://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      }     
      
      if (typeof youtube_api_init != 'undefined') {
        onYouTubePlayerAPIReady();
      }
    
      function onYouTubePlayerAPIReady() {
        player = new YT.Player('video-content', {
          height: '450',
          width: '800',
          videoId: '<%= @page.videos.first.youtube if @page.videos.first != nil %>',
          events: {
            'onStateChange': onPlayerStateChange
          }
        });
      }
  
      // when video ends
      function onPlayerStateChange(event) {        
          if(event.data === 0) {            
              $(".video-overlay").show();
          }
      }
      
      var youtube_api_init = 1;
    
    <% end %>
    
  </script>
<% end %>
<div class="page">
  <%= render 'pages/show/navigation' %>
  <div class="content">
    <h3 class="page-title text-center"><%= @page.title %></h3>
    <div class="breakline"></div>
    <%= render 'pages/show/video' if @page.page_type == 'video' %>
    <%= render 'pages/show/slides' if @page.page_type == 'slides' %>
    <%= render 'pages/show/editor' if @page.page_type == 'editor' %>
    <%= render 'pages/show/questions' if @page.page_type == 'questions' %>
    <%= render 'pages/show/closer' if @page.page_type == 'closer' %>
    <%= render 'pages/show/opener' if @page.page_type == 'opener' or @page.page_type == 'html' %>
    <%= render 'pages/show/exercise' if @page.page_type == 'exercise' %>
  </div>
</div>